@model Abstracciones.Modelos.Productos.ProductosDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Actualizar Producto | Clivax - Admin & Dashboard Template</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Premium Multipurpose Admin & Dashboard Template" name="description" />
    <meta content="Codebucks" name="author" />
    <link rel="shortcut icon" href="~/Content/images/favicon.ico">

    <script src="~/Scripts/js/pages/layout.js"></script>
    <link rel="stylesheet" href="~/Content/css/bootstrap.css" />
    <link rel="stylesheet" href="~/Content/css/app.css" />
    <link rel="stylesheet" href="~/Content/css/icons.css" />
</head>

<body>
    <div class="container mt-5">
        <h2 class="mb-4 text-center">Actualizar Producto</h2>

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "needs-validation", novalidate = "", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Producto_ID)

            <div class="card shadow-lg p-4 mx-auto" style="max-width: 600px;">
                <h4 class="mb-3 text-primary text-center">Detalles del Producto</h4>
                <hr />
                @if (ViewBag.MensajeDeError != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.MensajeDeError
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <!-- Nombre del Producto -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.nombre, "Nombre", new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(model => model.nombre, new { @class = "form-control", placeholder = "Ingrese el nombre del producto", required = "required" })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>

                <!-- Descripción -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.descripcion, "Descripción", new { @class = "form-label fw-bold" })
                    @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", rows = "3", placeholder = "Ingrese una breve descripción" })
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>

                <!-- Precio y Stock -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.precio, "Precio", new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(model => model.precio, new { @class = "form-control", type = "number", step = "0.01", placeholder = "0.00" })
                        @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.stock, "Stock", new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(model => model.stock, new { @class = "form-control", type = "number", min = "0", placeholder = "0" })
                        @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Imagen del Producto -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.imagen, "Imagen del Producto", new { @class = "form-label fw-bold" })

                    <!-- Mostrar la imagen actual si existe -->
                    <div class="mb-2" id="imagenPreviewContainer">
                        @if (!string.IsNullOrEmpty(Model.imagen))
                        {
                            <img id="imagenPreview" src="@Url.Content(Model.imagen)" alt="Imagen actual" style="max-width: 100px; max-height: 100px;" class="img-thumbnail" />
                            <p class="text-muted small mt-1">Imagen actual</p>
                        }
                        else
                        {
                            <img id="imagenPreview" src="#" alt="Preview de la imagen" style="display: none; max-width: 100px; max-height: 100px;" class="img-thumbnail" />
                        }
                    </div>

                    <!-- Input para subir nueva imagen -->
                    <input type="file" name="imagenArchivo" class="form-control" accept="image/*" id="imagenArchivoInput" />
                    <small class="text-muted">Deje en blanco para mantener la imagen actual</small>
                    @Html.ValidationMessage("imagenArchivo", "", new { @class = "text-danger" })

                    <!-- Campo oculto para mantener la ruta de la imagen actual -->
                    @Html.HiddenFor(model => model.imagen)
                </div>

                <script>
                    document.getElementById('imagenArchivoInput').addEventListener('change', function (event) {
                        const file = event.target.files[0];
                        const preview = document.getElementById('imagenPreview');
                        const previewContainer = document.getElementById('imagenPreviewContainer');

                        if (file) {
                            const reader = new FileReader();
                            reader.onload = function (e) {
                                preview.src = e.target.result;
                                preview.style.display = 'block';
                            };
                            reader.readAsDataURL(file);
                        } else {
                            preview.src = '#';
                            preview.style.display = 'none';
                        }
                    });
                </script>

                <!-- Categoría -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Categoria_ID, "Categoría", new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.Categoria_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Categoria_ID, "", new { @class = "text-danger" })
                </div>

                <!-- Estado del Producto -->
                <div class="mb-3">
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.Estado, new { @class = "form-check-input", id = "estadoProducto" })
                        <label class="form-check-label fw-bold" for="estadoProducto">Producto Activo</label>
                    </div>
                </div>

                <!-- Botones -->
                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Volver</a>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        }
    </div>

    <script src="~/Scripts/libs/jquery/jquery.min.js"></script>
    <script src="~/Scripts/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
</body>
</html>
