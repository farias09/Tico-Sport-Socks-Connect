@model IEnumerable<Abstracciones.Modelos.Productos.ProductosDto>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ordenStockActual = Request.QueryString["ordenStock"];
    var categorias = ViewBag.Categorias as List<SelectListItem>;

}

@{
    var notificacion = TempData["Notificacion"] as string;
    if (!string.IsNullOrEmpty(notificacion))
    {
        <br />
        <br />
        <div class="alert alert-info">@Html.Raw(notificacion)</div>
    }
}

<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Gestión de Inventarios</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Premium Multipurpose Admin & Dashboard Template" name="description" />
    <meta content="Codebucks" name="author" />
    <link rel="shortcut icon" href="~/Content/images/favicon.ico">

    <script src="~/Scripts/js/pages/layout.js"></script>
    <link rel="stylesheet" href="~/Content/css/bootstrap.css" />
    <link rel="stylesheet" href="~/Content/css/app.css" />
    <link rel="stylesheet" href="~/Content/css/icons.css" />
</head>

<style>
    /* Estilos base para los botones */
    .animated-button {
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        border: none;
        color: white;
        font-weight: bold;
        border-radius: 4px;
        padding: 10px 0;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    /* Efecto hover minimalista */
        .animated-button:hover {
            transform: translateY(-2px);
            color: white;
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

    /* Efecto de pulsación al hacer click */
    .animated-button:active {
        transform: translateY(1px);
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    /* Efecto de "onda" al hacer hover */
    .animated-button::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 5px;
        height: 5px;
        background: rgba(255, 255, 255, 0.5);
        opacity: 0;
        border-radius: 100%;
        transform: scale(1, 1) translate(-50%);
        transform-origin: 50% 50%;
    }

    .animated-button:hover::after {
        animation: ripple 1s ease-out;
    }

    @@keyframes ripple {
        0% {
            transform: scale(0, 0);
            opacity: 0.5;
        }
        100% {
            transform: scale(20, 20);
            opacity: 0;
        }
    }

    /* Colores personalizados */
    .btn-pdf {
        background-color: #e74c3c;
    }

    .btn-pdf:hover {
        background-color: #c0392b;
    }

    .btn-excel {
        background-color: #2ecc71;
    }

    .btn-excel:hover {
        background-color: #27ae60;
    }

    .btn-csv {
        background-color: #7f8c8d;
    }

    .btn-csv:hover {
        background-color: #95a5a6;
    }

    /* Espaciado entre icono y texto */
    .animated-button i {
        margin-right: 8px;
    }
</style>

<body>
    <div class="main-content">
        <div class="page-content">
            <div class="container mt-4">
                <!-- Encabezado principal -->
                <div class="text-center mb-4">
                    <h1>Gestion de Inventarios</h1>
                    <p class="text-muted">Administra y organiza los productos de tu inventario</p>
                </div>

                <!-- Panel superior: Filtros y acciones -->
                <form method="get" action="@Url.Action("Index")" class="row mb-4">
                    <div class="col-md-4">
                        <input type="text" name="nombre" class="form-control" placeholder="Buscar por nombre..." value="@ViewBag.Nombre" />
                    </div>
                    <div class="col-md-4">
                        <select name="categoriaId" class="form-select">
                            <option value="0">Filtrar por categoría</option>
                            @if (categorias != null)
                            {
                                foreach (var categoria in categorias)
                                {
                                    <option value="@categoria.Value" @(ViewBag.CategoriaId.ToString() == categoria.Value ? "selected" : "")>@categoria.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="estado" class="form-select">
                            <option value="true" @(ViewBag.Estado == true ? "selected" : "")>Activo</option>
                            <option value="false" @(ViewBag.Estado == false ? "selected" : "")>Inactivo</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary w-100"  style=" background-color: #192840; border-color: black; color: white;"
                            onmouseover="this.style.backgroundColor='#1d3557'; this.style.color='#ffffff';" 
                            onmouseout="this.style.backgroundColor='#192840'; this.style.color='white';">Filtrar</button>
                    </div>
                </form>

                <!-- Tabla de productos -->
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Productos en Inventario</h5>
                        <div class="position-absolute" style="left: 20%">
                            <select id="ordenStock" class="form-select form-select-sm" style="width: auto;">
                                <option value="desc" @(ordenStockActual == "desc" ? "selected" : "")>Stock Mayor a Menor</option>
                                <option value="asc" @(ordenStockActual == "asc" ? "selected" : "")>Stock Menor a Mayor</option>
                            </select>
                        </div>
                        <div>
                            <a href="@Url.Action("CrearProducto", "Productos")" class="btn btn-info btn-sm">Crear Producto</a>
                        </div>
                    </div>
                    <div class="card-body position-relative">
                        <p class="text-muted">Consulta, actualiza o inactiva productos en el inventario</p>
                        <table class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Nombre</th>
                                    <th>Descripción</th>
                                    <th>Precio</th>
                                    <th>Stock</th>
                                    <th>Imagen</th>
                                    <th>Categoría</th>
                                    <th>Estado</th>
                                    <th>Código</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.nombre</td>
                                        <td>@item.descripcion</td>
                                        <td>@item.precio.ToString("₡#,##0.00")</td>
                                        <td><span class="badge bg-primary">@item.stock</span></td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.imagen))
                                            {
                                                <img src="@Url.Content(item.imagen)" alt="Imagen de @item.nombre"
                                                     style="width: 50px; height: 50px; object-fit: cover; border-radius: 2px;" />
                                            }
                                            else
                                            {
                                                <span>Sin imagen</span>
                                            }
                                        </td>

                                        <td>@item.Categoria_ID</td>
                                        <td>
                                            <span class="badge @(item.Estado ? "bg-success" : "bg-danger")">
                                                @(item.Estado ? "Activo" : "Inactivo")
                                            </span>
                                        </td>
                                        <td>@item.CodigoDelProducto</td>
                                        <td>
                                            @Html.ActionLink("Editar", "ActualizarProducto", new { id = item.Producto_ID }, new { @class = "btn btn-sm btn-secondary" })

                                            @if (item.Estado)
                                            {
                                                <a href="#" class="btn btn-danger btn-sm btn-toggle-status"
                                                   data-url="@Url.Action("Inactivar", "Productos", new { id = item.Producto_ID })">
                                                    Inactivar
                                                </a>
                                            }
                                            else
                                            {
                                                <a href="#" class="btn btn-success btn-sm btn-toggle-status"
                                                   data-url="@Url.Action("Activar", "Productos", new { id = item.Producto_ID })">
                                                    Activar
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Exportar inventario -->
                <div class="row mt-4">
                    <div class="col-md-4 mb-3">
                        <a href="@Url.Action("ExportarPDF", "Productos", new { nombre = ViewBag.Nombre, categoriaId = ViewBag.CategoriaId, estado = ViewBag.Estado, ordenStock = ViewBag.OrdenStock })"
                           class="btn btn-pdf w-100 animated-button">
                            <i class="fas fa-file-pdf"></i> Exportar a PDF
                        </a>
                    </div>
                    <div class="col-md-4 mb-3">
                        <a href="@Url.Action("ExportarExcel", "Productos", new { nombre = ViewBag.Nombre, categoriaId = ViewBag.CategoriaId, estado = ViewBag.Estado, ordenStock = ViewBag.OrdenStock })"
                           class="btn btn-excel w-100 animated-button">
                            <i class="fas fa-file-excel"></i> Exportar a Excel
                        </a>
                    </div>
                    <div class="col-md-4 mb-3">
                        <a href="@Url.Action("ExportarCSV", "Productos", new { nombre = ViewBag.Nombre, categoriaId = ViewBag.CategoriaId, estado = ViewBag.Estado, ordenStock = ViewBag.OrdenStock })"
                           class="btn btn-csv w-100 animated-button">
                            <i class="fas fa-file-csv"></i> Exportar a CSV
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- JAVASCRIPT -->
        <script src="~/Scripts/libs/jquery/jquery.min.js"></script>
        <script src="~/Scripts/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
        <script src="~/Scripts/libs/metismenu/metisMenu.min.js"></script>
        <script src="~/Scripts/libs/simplebar/simplebar.min.js"></script>
        <script src="~/Scripts/libs/node-waves/waves.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
            document.addEventListener("DOMContentLoaded", () => {
                const toggleButtons = document.querySelectorAll(".btn-toggle-status");

                toggleButtons.forEach(button => {
                    button.addEventListener("click", (event) => {
                        event.preventDefault();

                        const url = button.getAttribute("data-url");
                        const accion = button.classList.contains("btn-danger") ? "inactivar" : "activar";

                        Swal.fire({
                            title: "¿Estás seguro?",
                            text: `Vas a ${accion} este producto. ¡No podrás revertir este cambio!`,
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonText: `Sí, ${accion}`,
                            cancelButtonText: "No, cancelar",
                            customClass: {
                                confirmButton: "btn btn-success",
                                cancelButton: "btn btn-danger"
                            },
                            buttonsStyling: false
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = url;
                            } else {
                                Swal.fire("Cancelado", "El estado del producto no ha cambiado.", "error");
                            }
                        });
                    });
                });
            });
        </script>
        <script>
        document.getElementById("ordenStock").addEventListener("change", function () {
            let ordenSeleccionado = this.value;
            window.location.href = "@Url.Action("Index")" + "?ordenStock=" + ordenSeleccionado;
        });
        </script>

</body>

</html>
