@model UI.Models.ChatViewModel
<h4>Chat con @Model.Nombre (@Model.Numero)</h4>
<div class="chat-box">
    <div id="mensajes-container">
        @foreach (var mensaje in Model.Mensajes)
        {
            <div class="mensaje @(mensaje.EsMio ? "mio" : "otro")">
                <p>@mensaje.Contenido</p>
                <span class="fecha">@mensaje.Fecha.ToString("g")</span>
            </div>
        }
    </div>
</div>
<!-- Formulario de envío -->
<div class="chat-controls">
    <form id="chatForm">
        <input type="hidden" id="usuarioId" value="@Model.UsuarioId" />
        <div class="input-group">
            <textarea id="mensaje" placeholder="Escribe tu mensaje..." class="form-control"></textarea>
            <button type="submit" class="btn btn-success">Enviar</button>
        </div>
    </form>
    <!-- Botón de Gestionar Pedidos -->
    <div class="gestionar-pedidos-container">
        <button id="gestionarPedidosBtn" class="btn btn-primary btn-gestionar-pedidos">
            <i class="bi bi-cart-check me-2"></i>Gestionar Pedidos
        </button>
    </div>
</div>
<style>
    .chat-box {
        flex-grow: 1;
        overflow-y: auto;
        border: 1px solid #ddd;
        background: #fff;
        padding: 15px;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        gap: 10px;
        background-image: url('/Content/images/fondowhatsapp.png');
        background-size: cover;
        background-repeat: repeat;
        background-position: center;
        margin-bottom: 10px;
    }

    .mensaje {
        max-width: 60%;
        padding: 10px;
        border-radius: 10px;
        font-size: 14px;
        line-height: 1.4;
        word-wrap: break-word;
    }

    .mio {
        align-self: flex-end;
        background-color: #d9fdd3;
        color: black;
        text-align: right;
    }

    .otro {
        align-self: flex-start;
        background-color: #fcfafa;
        color: black;
        text-align: left;
    }

    .chat-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
        padding: 15px;
        max-height: 500px;
        overflow-y: auto;
    }

    .mensaje .fecha {
        display: block;
        font-size: 12px;
        color: rgba(0, 0, 0, 0.5);
        margin-top: 5px;
        text-align: right;
    }

    .mensaje.otro .fecha {
        color: rgba(0, 0, 0, 0.5);
    }

    /* Estilos nuevos */
    .chat-controls {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .input-group {
        display: flex;
        margin-bottom: 10px;
    }

        .input-group textarea {
            flex-grow: 1;
            border-radius: 4px 0 0 4px;
            resize: none;
            height: 38px;
            overflow: hidden;
        }

        .input-group button {
            border-radius: 0 4px 4px 0;
        }

    .gestionar-pedidos-container {
        display: flex;
        justify-content: center;
    }

    .btn-gestionar-pedidos {
        width: 100%;
        padding: 10px;
        background-color: #28a745;
        border-color: #28a745;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-gestionar-pedidos:hover {
            background-color: #218838;
            border-color: #1e7e34;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
</style>
<script>
    document.getElementById("chatForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const usuarioId = document.getElementById("usuarioId").value;
        const mensaje = document.getElementById("mensaje").value;

        if (mensaje.trim() === "") return;

        const formData = new FormData();
        formData.append("id", usuarioId);
        formData.append("contenido", mensaje);

        fetch(`/Conversaciones/EnviarMensaje/${usuarioId}`, {
            method: "POST",
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById("mensaje").value = "";
                    actualizarMensajes();
                } else {
                    alert("Error: " + data.message);
                }
            })
            .catch(error => {
                console.error("Error al enviar mensaje:", error);
            });
    });

    // Controlador para el botón de gestionar pedidos
    document.getElementById("gestionarPedidosBtn").addEventListener("click", function () {
        const usuarioId = document.getElementById("usuarioId").value;
        window.location.href = `/Ordenes/Create?usuarioId=${usuarioId}`;
    });

    // Auto-resize para el textarea
    const textarea = document.getElementById('mensaje');
    textarea.addEventListener('input', function () {
        this.style.height = 'auto';
        this.style.height = (this.scrollHeight) + 'px';
    });
</script>